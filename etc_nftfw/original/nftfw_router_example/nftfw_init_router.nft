#!/usr/sbin/nft -f
#
# Local multiinterface version for
# gateway machine

# First remove all rulesets
flush ruleset

#
# Variables
# interface for router
define gateif = "enp4s0"
# interface for local network
define localif = "enp1s0"
# ip of our router interface
define gateip = 203.0.113.234
# ip for router
define gatesrcip = 203.0.113.238
# router uses this for admin
# allow these addresses to be routed to the gateway
define gateadminnet = 192.168.1.0/24

table ip filter {
	chain input {
		type filter hook input priority 0; policy drop;
		iif "lo" counter accept

		# not sure I need this
		pkttype multicast counter accept
		pkttype broadcast counter accept

		# allow all from local interface
		iif $localif counter accept

 		# allow direct from gateway
		ip saddr $gatesrcip counter accept

		# allow direct from admin on the gateway
		ip saddr $gateadminnet counter accept

		# better to put these related checks before looking
		# at any thing else, so the firewall is only
		# processing new connections
		ct state {established,related} counter accept
		ct state invalid counter drop

		counter jump whitelist
		counter jump blacklist
		counter jump incoming
	}

	chain forward {
		type filter hook forward priority 0; policy drop;

		# allow all from local
		iif $localif counter accept

		# better to put these related checks before looking
		# at any thing else, so the firewall is only
		# processing new connections
		ct state {established,related} counter accept
		ct state invalid counter drop

		counter jump whitelist
		counter jump blacklist
		counter jump incoming
	}

	chain output {
		type filter hook output priority 0; policy accept;
		iif "lo" counter counter accept
		ct state {established,related} counter accept
		ct state invalid counter drop
		counter jump outgoing
	}

	# basic target when rejecting packets
	chain rejectcounter {
		meta l4proto tcp counter reject with tcp reset
		meta l4proto udp counter reject
		counter drop
	}


	# basic target when dropping packets
	chain dropcounter {
		counter drop
	}

	# empty chains to
	chain whitelist {
	}

	chain blacklist {
	}

	chain incoming {
	}

	chain outgoing {
	}
}

table ip nat {
	chain prerouting {
		type nat hook prerouting priority 0; policy accept;
	}
	chain postrouting {
		type nat hook postrouting priority 100; policy accept;
		oif $gateif counter snat to $gateip
	}
}

#
# Don't have ipv6 from outside
# but some internal systems use it
table ip6 filter {
	chain input {
		type filter hook input priority 0; policy drop;
		iif "lo" counter accept

		ct state {established,related} counter accept
		ct state invalid counter drop

		# allow all from local interface
		iif $localif counter accept

		counter jump whitelist
		counter jump blacklist
		counter jump incoming
	}

	# won't be using forward in the standard firewall
	chain forward {
		type filter hook forward priority 0; policy drop;

		ct state {established,related} counter accept
		ct state invalid counter drop

		# allow all from local
		iif $localif counter accept

		counter jump whitelist
		counter jump blacklist
		counter jump incoming
	}

	chain output {
		type filter hook output priority 0; policy accept;
		oif "lo" counter accept
		ct state {established,related} counter accept
		ct state invalid counter drop
		counter jump outgoing
	}

	chain rejectcounter {
		meta l4proto tcp counter reject with tcp reset
 		meta l4proto udp counter reject
		counter drop
	}

	# basic target when dropping packets
	chain dropcounter {
		counter drop
	}

	chain whitelist {
	}

	chain blacklist {
	}

	chain incoming {
	}

	chain outgoing {
	}
}

#
# The plan is put firewall, blacklist and whitelist
# into separate files. These files will use the 'incremental' syntax
# The intention is to optimise changes to the firewall by making only the changes
# that are needed. When active, changes are mostly to the blacklist
# and that will be only to some sets. blacklist and whitelist
# will be split into a set file and a rules file to allow
# for separate updates
#
# Here we include the files generated by the system
# this file is copied into the build.d and install.d directories
# so all include files need to be relative to it.
#
# This file will always be used with the -I argument
# to nft, filenames cannot start with ./
#
include "incoming.nft"
include "outgoing.nft"
include "whitelist_sets_init.nft"
include "whitelist_sets.nft"
include "whitelist.nft"
include "blacklist_sets_init.nft"
include "blacklist_sets.nft"
include "blacklist.nft"
#
#
# end
#
