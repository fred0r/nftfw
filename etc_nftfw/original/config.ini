#
# Ini style file that can be used
# to override compiled in settings
# for nftfw.
#
#
# Sections are important
[Locations]
#
#  Various directories are supplied by config
#  and it's desirable to add a 'reasonably static' root.
#  The program looks for /etc/nftfw and
#  /usr/local/etc/nftfw
#  to find the locally installed versions
#  and sets 'root' - which is then
#  used in the following rules

# system locations used by nftfw
;sysetc = ${root}/etc/nftfw
;sysvar = ${root}/var/lib/nftfw

#  Location of system nftables.conf
#  Usually /etc/nftables.conf
;nftables_conf = ${root}/etc/nftables.conf

#
#  Where the initial nft setup for the firewall is found
;nftfw_init = ${sysetc}/nftfw_init.nft
#

#  This is where to look for the various directories
#  that manage the system.
#  On a system with symbiosis installed can be set to
#  /etc/symbiosis
#  NB Symbiosis files in local.d are not supported
#  by this system. To provide local changes, edit
#  etc/nftfw_init.nft
;nftfw_base = ${sysetc}

[Owner]
# Owner used to set ownership of files created
# in children of etc/nftfw
# Set to root.root in the default setup -
# Files in var/lib/nftfw always owned by root
;owner = root

# group only needed if differs from that
# of owner
;group

[Rules]
#   Default rules for incoming and outgoing
#   Possible to use 'drop' for reject here
;incoming = accept
;outgoing = reject
;whitelist = accept
;blacklist = reject

[Logging]
#  System Logging constants
#
#  Format of log statements
;logfmt = nftfw[%(process)d]: %(message)s
#  what level are we logging at
#  needs to be a level name not a value
#  CRITICAL, ERROR, WARNING, INFO, DEBUG
;loglevel = ERROR
#  what facility are we using
#  needs to be a facility name not a value
;logfacility = daemon
#  set to False to inhibit log printing
#  NB this value is initially set to
#  False when the program is not talking to
#  a terminal
;logprint = True
#  set to False to inhibit syslog use
;logsyslog = True

[Nft]
#  Nftables counters and logging
#  do we want counters?
;incoming_counter = True
;outgoing_counter = True
;blacklist_counter = True
;whitelist_counter = True
#  do we want nftables logging?
#  this adds a different prefix for each of the tables
#  when logged
#  use empty value to mean none
;incoming_logging
;outgoing_logging
;blacklist_logging = Blacklist
;whitelist_logging

# These two variables control the type of sets automatically generated
# for blacklist and whitelist tables. When true, nftfw uses
# auto_merged, interval sets for the blacklist or whitelist sets it
# makes. This set type automatically create single entries containing
# an address range for adjacent IP addresses. The feature is desirable
# because it reduces the number of matches.
#
# However, at present, the auto-merged, interval sets can cause the
# nft program to fail, flagging an error. There is a bug causing
# nft to succeed in loading the set when a full install is performed
# but failing when attempting a reload.
#
# The bug has been reported to the nftables development team, but no
# fix has been generated as of the current releases. nftfw will work
# around this bug, automatically generating a full install when an
# attempt at a set reload fails. However, it seems a good idea to
# provide a way of turning this feature on and default to
# not using the feature.
;blacklist_set_auto_merge = False
;whitelist_set_auto_merge = False

[Whitelist]
#  Whitelist constants
#  Wtmp file to scan, empty to use the system
#  default. Set wtmp_file=utmp to use the system default
#  utmp file, otherwise set to a file
;wtmp_file

#  Days after which automatically generated
#  whitelist entries are expired from the system
;whitelist_expiry = 10

[Blacklist]
# Constants to manage blacklisting
# these depend on the matchcount value
# found from the logreader script
# NB Symbiosis had multiple records
# for each ip. This system only has one record
# but records timestamps. Expiry uses the
# complete record of activity from the ip
#
# Value in matchcount after which
# an ip is blocked using the ports in
# the rule (Symbiosis used 2)
;block_after = 10
#
# Value in matchcount after which
# an ip is blocked using all ports
;block_all_after = 100
#
# These depend on the time of last incident
#
# Number of days after which blacklisted ips
# should be expired. Symbiosis used 2
;expire_after = 10
#
# Database clean
# remove ip from the database where there has been
# no error posted for more than these number of days
;clean_before = 90

# 'nftfw blacklist' will check whether the IP addresses
# in the database that should be active are actually present
# in the blacklist directory _blacklist.d_. 'Should be active'
# means that the addresses have not been automatically expired.
# 'nftfw' is largely event driven, but events get missed. So
# on the basis that if stuff can happen, it will, this code
# will recover the correct state of the blacklist directory.
# It seems overkill to call this every time the blacklist scanner
# runs, so it is executed when number of runs of the scanner
# is greater than the value of this variable. The default is
# to run the blacklist scanner 96 times a day, so 50 seems
# are reasonable way to run the recovery code once a day. Set
# this to zero  to turn this feature off.
;sync_check = 50

[Nftfwls]
# Allow local selection for date formats in nftfwlist
# and nftfwedit print option
# seconds are not that relevant
# dd-mm-YYYY HH:MM
;date_fmt = %d-%m-%Y %H:%M
#
# Replaces comma in the pattern listing by
# newline and a space to reduce output width
;pattern_split = No

[Nftfwedit]
# Supply DNSBL lookup names and lookup addresses
# None set in default settings
# These are possible examples
;SpamHaus=zen.spamhaus.org
;Barracuda=b.barracudacentral.org
;SpamCop=bl.spamcop.net
