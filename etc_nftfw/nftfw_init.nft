#!/usr/sbin/nft -f
#
# Build basic tables and chains
# input and forward chains default to drop
# there is no limit on output
#
# using ip and ip6 so that sets can be used with
# ip addresses of both flavours
#
# First remove all rulesets
flush ruleset

table ip filter {
	chain input {
		type filter hook input priority 0; policy drop;

		# remove any invalid packets first
		ct state invalid counter drop

		# Accept current connections
		ct state {established,related} counter accept

		iif "lo" counter accept

		counter jump whitelist
		counter jump blacknets
		counter jump blacklist
		counter jump incoming
	}

	# won't be using forward in the standard firewall
	chain forward {
		type filter hook forward priority 0; policy drop;
		ct state invalid counter drop
		ct state {established,related} counter accept
	}

	chain output {
		type filter hook output priority 0; policy accept;

		ct state invalid counter drop
		ct state {established,related} counter accept

		oif "lo" counter accept

		counter jump outgoing
	}

	# default target when rejecting packets
	chain rejectcounter {
		meta l4proto tcp counter reject with tcp reset
		meta l4proto udp counter reject
		counter drop
	}

	# default target when dropping packets
	chain dropcounter {
	        counter drop
        }

	# empty chains to be supplied by included files
	chain whitelist {
	}

	chain blacknets {
	}

	chain blacklist {
	}

	chain incoming {
	}

	chain outgoing {
	}
}

table ip myhelpers {
	chain prerouting {
		type filter hook prerouting priority 0;
	}
      }

table ip6 filter {
	chain input {
		type filter hook input priority 0; policy drop;

		ct state invalid counter drop
		ct state {established,related} counter accept

		iif "lo" counter accept

		# essential ip6 icmp
		# here rather than in blacklist to allow
		# selective filtering from neighbours
		icmpv6 type { destination-unreachable, packet-too-big, time-exceeded, parameter-problem } counter accept
                icmpv6 type { nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert, nd-redirect } ip6 hoplimit 255 counter accept

		counter jump whitelist
		counter jump blacknets
		counter jump blacklist
		counter jump incoming
	}

	# won't be using forward in the standard firewall
	chain forward {
		type filter hook forward priority 0; policy drop;
		ct state invalid counter drop
		ct state {established,related} counter accept
	}

	chain output {
		type filter hook output priority 0; policy accept;

		ct state invalid counter drop
		ct state {established,related} counter accept

		oif "lo" counter accept

		icmpv6 type { destination-unreachable, packet-too-big, time-exceeded, parameter-problem } counter accept
                icmpv6 type { nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert, nd-redirect } ip6 hoplimit 255 counter accept
		counter jump outgoing
	}

	# default target when rejecting packets
	chain rejectcounter {
		meta l4proto tcp counter reject with tcp reset
		meta l4proto udp counter reject
		counter drop
	}

	# default target when dropping packets
	chain dropcounter {
	        counter drop
        }

	# empty chains to be supplied by included files
	chain whitelist {
	}

	chain blacknets {
	}

	chain blacklist {
	}

	chain incoming {
	}

	chain outgoing {
	}
}
table ip6 myhelpers {
	chain prerouting {
		type filter hook prerouting priority 0;
	}
      }
#
# The plan is put firewall, blacknets, blacklist and whitelist
# into separate files. These files will use the 'incremental' syntax.
# The intention is to optimise changes to the firewall by making only
# the changes that are needed. When active, changes are mostly to the
# blacklist and that will be only to some sets. blacklist and whitelist
# will be split into a set file and a rules file to allow
# for separate updates.
#
# Here we include the files generated by the system
# this file is copied into the build.d and install.d directories
# so all include files need to be relative to it.

#
# This file will always be used with the -I argument
# to nft, filenames cannot start with ./
#
include "incoming.nft"
include "outgoing.nft"

# create empty sets
include "whitelist_sets_init.nft"

# set contents
include "whitelist_sets.nft"

# whitelist rules
include "whitelist.nft"

# create empty sets
include "blacknets_sets_init.nft"

# set contents
include "blacknets_sets.nft"

#blacklist rules
include "blacknets.nft"

# create empty sets
include "blacklist_sets_init.nft"

# set contents
include "blacklist_sets.nft"

#blacklist rules
include "blacklist.nft"
#
#
# end
#
